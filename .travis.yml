sudo: required
services:
- docker
language: python
python:
- '3.6'
before_install:
- docker version
- docker info
install:
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t swagger-spring-example:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run ./postmantests/postman_collection.json -e ./postmantests/postman_environment.json
after_success:
- docker login -p $DOCKER_PASS -u $DOCKER_USER
- docker build -t paulspencer/lab2 .
- docker tag paulspencer/lab2 paulspencer/lab2
- docker push paulspencer/lab2
env:
  global:
  - secure: DAig+p5BmQWLsKMJ8MjiX1lqK1DdnmbXIZa3B2oNj4x5+5aFjPaBDbzbXulKBLmM4i9Cnon/X7TaNBW63vUrO6hWFWnG9gToeCawGwPkMBu8r7z0K+wNs9wwWM18K1NrjqYOuHYDkm047ZA+GbC6RaDGZfe0BeeCkKZ1BbCI3I1tRdR9BymG6jRHWi3j/Rgmoeva2AWU2vpD/5zlJgwstjyWZoHmA/w3pNQQ/o8SiCaRWuHlae65bE/bhIJyFMA0eSZMEZffVl52G8XW9ZgCHZ1l26RsrRWSl1Poiid7+7loPOANg93vJ4InaYcoFv3C0gkVhI71ficvY5lSZOHvJWbbuv9yhzi7p0dNjzjABsjOBJCbF+KLx6XaAuisLzcL+dk4/ZuIU+5VI5UtouE652nzDx1VATfVediG7i3MsZpzFt0wKnys075wp+T8kPnvSynbBl1pfZwDtZTqDt4nHOyu5hlA7P6bkGFNpzPw3xheZ6cVjTSxJmBr99G3R1mS/yvtMJYdNXOX7RfRWhBaphxMIFKJHcvviKgLsSHdg/qWzzhtPPUyItB4HzOVlezs1DezUvvxaQh0qKS0cyf6nCPcOK8PV4QVkmj9TSrm3AOa5c5bqCLVwW5VkZHQdI3XeFBuU/a+U3/dMc3RVslnY/sHAa4+zZTctpvlnn2g9FQ=
  - secure: TTk8HOSoDfQysfz+Z+GP960Y5yQBEzi0/iB3RW6yyJblpnT3WFxZT/ys5U1kX4hXSmUKJXR6oT7ljIabnfbGHj2uWm6wbnbdgzk0+jGYjpkb3JjoXA7RmNayKyPfiP2nj3syvDkcKufFvLWPV0i7PFS1GqA9IY6/H1cGZwUswIgPHGq5t9JijMgwUqn30P03UOVRJjAPNM5Gwd44n4a04HyCN6QxvwYW3lUzTO5hF56t2cH5+iWnvaHV21ouMNcMzxecwkeLvnsjWQtIcDnB+v5btVYEY25o1FbUAJ8sh+OusG4qT5Ezcx3w66LUVhatcHGbAA9ksnScAQangPGyCwSlvx8H0tCwss2CUW0HCUy6UqmjZPG2HUUVNQ2DhcG0/4PDlxQY06wq7CMqnkNJG9FvnfLTgaa8QHqFMBOtnkyR2oIh8Ob3pJsrqkCBO6cSLNBDmGYf1xhJQPihylJrVmwwi+htaLG0Qf51Ir4psvSAXl6LmiP2xXmUjn21Ck+/vCqTNrRgxHKLdPhyEfgE9OCT7gb71iq32jpe9SqgxkR9y+jzskpUJ896Onus3CdKZHaiBoEvMaJBbDKwN2PsIsDUfbOXePICChC4wDqGIcp18ICULOzVaoSx0QnImPTPQoi+a4NHhEcE59Yun2NYREU17xwFydMc+xvOzHipQzE=
